<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="3" tests="14" time="13.088" timestamp="2022-12-18T12:53:38.368850" hostname="bcd0741a23f1.ant.amazon.com"><testcase classname="test_fixtures" name="test_reverseString" time="0.000" /><testcase classname="test_parameterize" name="test_multiplication_11[1-11]" time="0.000" /><testcase classname="test_parameterize" name="test_multiplication_11[2-22]" time="0.000" /><testcase classname="test_parameterize" name="test_multiplication_11[3-35]" time="0.000"><failure message="assert (11 * 3) == 35">num = 3, output = 35

    @pytest.mark.parametrize("num, output", [(1, 11), (2, 22), (3, 35), (4, 44)])
    def test_multiplication_11(num, output):
&gt;       assert 11*num == output
E       assert (11 * 3) == 35

tests/test_parameterize.py:9: AssertionError</failure></testcase><testcase classname="test_parameterize" name="test_multiplication_11[4-44]" time="0.000" /><testcase classname="test_parameterize" name="test_failbutAllow_1" time="0.000"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_parameterize" name="test_failbutAllow_2" time="0.000"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_parameterize" name="test_skiptest" time="0.000"><skipped type="pytest.skip" message="unconditional skip">/Users/bdastur/code/notes_aug22/notes/python/pytest/tests/test_parameterize.py:19: unconditional skip</skipped></testcase><testcase classname="test_square" name="test_sqrt" time="0.000" /><testcase classname="test_square" name="testsquare" time="0.000" /><testcase classname="test_square" name="test_greater" time="0.000" /><testcase classname="test_square" name="test_thatTakesAwhile_1" time="4.017" /><testcase classname="test_square" name="test_thatTakesAwhile_2" time="4.013" /><testcase classname="test_square" name="test_thatTakesAwhile_3" time="5.017" /></testsuite></testsuites>